apply plugin: 'cpp'

model {
    platforms {
        x64 {
            architecture "x86_64"
        }
    }

    toolChains {
        gcc(Gcc) {
            path "/usr/local/bin"
            eachPlatform {
                cCompiler.executable = "gcc-7.3.0"
                cppCompiler.executable = "g++-7.3.0"
                linker.executable = "g++-7.3.0"
                staticLibArchiver.executable = "gcc-ar-7.3.0"
            }
        }
    }

    components {
        grammar_parser(NativeLibrarySpec) {
            targetPlatform "x64"

            
            binaries.withType(NativeBinarySpec) {
                cppCompiler.args "-I/usr/local/include/antlr4-runtime"
            }
        }
        command_line(NativeExecutableSpec) {
            targetPlatform "x64"

            binaries.all {
                lib library: "grammar_parser", linkage: 'static'
            }

            binaries.withType(NativeBinarySpec) {
                cppCompiler.args "-I/usr/local/include/antlr4-runtime"
            }
        }
    }
}

task antlrGenerate(type: Exec) {
    workingDir './grammar'

    commandLine 'java', '-jar', '/opt/antlr4/antlr-4.7.1-complete.jar', '-Dlanguage=Cpp', 'Echelon.g4'
}

task antlrCopyHeaders(type: Copy, dependsOn: antlrGenerate) {
    include '*.h'
    from 'grammar'
    into 'src/grammar_parser/headers'
}

task antlrCopySources(type: Copy, dependsOn: antlrGenerate) {
    include '*.cpp'
    from 'grammar'
    into 'src/grammar_parser/cpp'
}

task antlr {
}

antlr.dependsOn antlrCopyHeaders
antlr.dependsOn antlrCopySources
