apply plugin: 'cpp'
apply plugin: 'google-test'

model {
    platforms {
        x64 {
            architecture "x86_64"
        }
    }

    toolChains {
        gcc(Gcc) {
            path "/usr/local/bin"
            eachPlatform {
                cCompiler.executable = "gcc-7.3.0"
                cppCompiler.executable = "g++-7.3.0"
                linker.executable = "g++-7.3.0"
                staticLibArchiver.executable = "gcc-ar-7.3.0"
            }
        }
    }

    binaries {
        all {
            if (toolChain in Gcc) {
                cppCompiler.args '-Wall', '-std=c++14'
                linker.args '-L/usr/local/lib'
            }
        }

        withType(GoogleTestTestSuiteBinarySpec) {
            lib library: "googleTest", linkage: "static"

            // Link all the eup libraries to every test.
            // This is inefficient but I can't find documentation for how configure dependencies for a single test.
            lib library: "grammar_parser", linkage: "static"
            lib library: "grammar_model", linkage: "static"
            lib library: "reason", linkage: "static"
            lib library: "grammar_utilities", linkage: "static"

            if (targetPlatform.operatingSystem.linux) {
                cppCompiler.args '-pthread'
                linker.args '-pthread'
            }
        }
    }

    components {
        grammar_parser(NativeLibrarySpec) {
            targetPlatform "x64"
        }
        grammar_model(NativeLibrarySpec) {
            targetPlatform "x64"
        }
        grammar_utilities(NativeLibrarySpec) {
            targetPlatform "x64"
        }
        reason(NativeLibrarySpec) {
            targetPlatform "x64"
        }
        command_line(NativeExecutableSpec) {
            targetPlatform "x64"

            sources {
                cpp.lib library: "grammar_parser"
                cpp.lib library: "grammar_model"
                cpp.lib library: "reason"
                cpp.lib library: "grammar_utilities"
            }

            binaries.all {
                // lib library: "grammar_parser", linkage: 'static'
                // lib library: "grammar_model", linkage: 'static'
                // lib library: "grammar_utilities", linkage: 'static'
                // lib library: "reason", linkage: 'static'
            }
        }
    }

    repositories {
        libs(PrebuiltLibraries) { 
            googleTest { 
                headers.srcDir new File(projectDir, "/gtest-1.8.0/include") 
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file(projectDir.getPath() + "/gtest-1.8.0/libgtest.a") 
                }
            }
        }
    }
}
